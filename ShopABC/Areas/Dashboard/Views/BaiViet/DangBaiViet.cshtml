@using ShopABC.Models;

@{
    ViewBag.Title = "Đăng bài viết";
    ViewBag.Description = "Thêm một bài viết mới";
    ISession sess = Context.Session;
    @model ShopABC_ChiTietBaiViet

}

@using (Html.BeginForm("DangBaiViet", "BaiViet", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <section class="section">
        <div class="row">
            <div class="col-12 col-md-8">
                <div class="card">
                    <div class="card-content">
                        <div class="card-body">
                            <h4 class="card-title pb-3">Thông tin bài viết</h4>
                            <div class="form-group">
                                @Html.LabelFor(m => m.TieuDe, new { @class = "fw-bold" })<span class="text-danger"> *</span>
                                @Html.TextAreaFor(m => m.TieuDe, new { @class = "form-control mt-1", @autofocus = "", @rows = 4 })
                                @Html.ValidationMessageFor(m => m.TieuDe, "", new { @class = "text-danger" })
                            </div>
                            <div class="row mt-4">
                                <div class="col-lg-4 mb-1">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.NgayDang, new { @class = "fw-bold" })
                                        <input type="datetime" class="form-control mt-1" value="@DateTime.Now.ToString("dd/MM/yyyy HH:mm")" readonly />
                                    </div>
                                </div>
                                <div class="col-lg-4 mb-1">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.MaNV, new { @class = "fw-bold" })
                                        <input type="text" class="form-control mt-1" value="@ShopABC_NhanVien.get_HoTen((int)sess.GetInt32("manv"))" readonly />
                                    </div>
                                </div>
                                <div class="col-lg-4 mb-1">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.SoLanDoc, new { @class = "fw-bold" })
                                        <input type="text" class="form-control mt-1" value="0" readonly />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="card">
                    <div class="card-content">
                        <div class="card-body">
                            <h4 class="card-title pb-3">@Html.LabelFor(m => m.HinhBV, new { @class = "fw-bold" })</h4>
                            <div class="ratio ratio-4x3 border border-2 border-secondary rounded-3">
                                <img class="img-fluid" id="hinhbv" src="@ShopABC_Tools.get_Images_over_CDN("no-image.png", 0)" />
                            </div>
                            <fieldset class="pb-4">
                                <div class="mt-4 pb-1 pt-2">
                                    @Html.TextBoxFor(m => m.HinhBV, new { @class = "form-control", @type = "file", @onchange = "readURL(this);"})
                                    @Html.ValidationMessageFor(m => m.HinhBV, "", new { @class = "text-danger" })
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">@Html.LabelFor(m => m.NoiDung, new { @class = "fw-bold" })</h4>
                    </div>
                    <div class="card-body">
                        @Html.TextAreaFor(m => m.NoiDung, new { @class = "form-control mt-1 tinymce", @rows = "6" })
                        @Html.ValidationMessageFor(m => m.NoiDung, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <button type="submit" name="hanhdong" value="dang-bai" class="btn btn-success d-block mx-auto">Đăng bài</button>
            </div>
            <div class="col-4">
                <button type="submit" name="hanhdong" value="draft" class="btn btn-danger d-block mx-auto">Nháp</button>
            </div>
            <div class="col-4">
                <button type="reset" class="btn btn-secondary d-block mx-auto">Hoàn tác</button>
            </div>
        </div>
    </section>
}

@section More_Scripts {
    <script src="https://cdn.jsdelivr.net/npm/tinymce/tinymce.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const themeOptions = document.body.classList.contains("theme-dark")
                ? {
                    skin: "oxide-dark",
                    content_css: "dark",
                }
                : {
                    skin: "oxide",
                    content_css: "default",
                }
            tinymce.init({ selector: ".tinymce", ...themeOptions })
        });
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#hinhbv')
                        .attr('src', e.target.result)
                        .width("100%")
                        .height("100%");
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}


